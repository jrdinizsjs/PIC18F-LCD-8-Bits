

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 20 21:09:22 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F2550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  000AB8                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for lcd_setCursor@F2824
    62  000AB8  C0                 	db	192
    63  000AB9  C1                 	db	193
    64  000ABA  C2                 	db	194
    65  000ABB  C3                 	db	195
    66  000ABC  C4                 	db	196
    67  000ABD  C5                 	db	197
    68  000ABE  C6                 	db	198
    69  000ABF  C7                 	db	199
    70  000AC0  C8                 	db	200
    71  000AC1  C9                 	db	201
    72  000AC2  CA                 	db	202
    73  000AC3  CB                 	db	203
    74  000AC4  CC                 	db	204
    75  000AC5  CD                 	db	205
    76  000AC6  CF                 	db	207
    77                           
    78                           ;initializer for lcd_setCursor@F2822
    79  000AC7  80                 	db	128
    80  000AC8  81                 	db	129
    81  000AC9  82                 	db	130
    82  000ACA  83                 	db	131
    83  000ACB  84                 	db	132
    84  000ACC  85                 	db	133
    85  000ACD  86                 	db	134
    86  000ACE  87                 	db	135
    87  000ACF  88                 	db	136
    88  000AD0  89                 	db	137
    89  000AD1  8A                 	db	138
    90  000AD2  8B                 	db	139
    91  000AD3  8C                 	db	140
    92  000AD4  8D                 	db	141
    93  000AD5  8F                 	db	143
    94                           
    95                           ;initializer for _DISPLAY_CONTROL
    96  000AD6  0E                 	db	14
    97  0000                     _PORTBbits	set	3969
    98  0000                     _PORTCbits	set	3970
    99  0000                     _TRISCbits	set	3988
   100  0000                     _TRISBbits	set	3987
   101                           
   102                           	psect	smallconst
   103  000800                     __psmallconst:
   104                           	callstack 0
   105  000800  00                 	db	0
   106  000801                     STR_2:
   107  000801  43                 	db	67	;'C'
   108  000802  6F                 	db	111	;'o'
   109  000803  6D                 	db	109	;'m'
   110  000804  75                 	db	117	;'u'
   111  000805  6E                 	db	110	;'n'
   112  000806  75                 	db	117	;'u'
   113  000807  6E                 	db	110	;'n'
   114  000808  69                 	db	105	;'i'
   115  000809  2E                 	db	46
   116  00080A  20                 	db	32
   117  00080B  38                 	db	56	;'8'
   118  00080C  20                 	db	32
   119  00080D  42                 	db	66	;'B'
   120  00080E  69                 	db	105	;'i'
   121  00080F  74                 	db	116	;'t'
   122  000810  73                 	db	115	;'s'
   123  000811  00                 	db	0
   124  000812                     STR_3:
   125  000812  4C                 	db	76	;'L'
   126  000813  43                 	db	67	;'C'
   127  000814  44                 	db	68	;'D'
   128  000815  20                 	db	32
   129  000816  53                 	db	83	;'S'
   130  000817  54                 	db	84	;'T'
   131  000818  41                 	db	65	;'A'
   132  000819  52                 	db	82	;'R'
   133  00081A  54                 	db	84	;'T'
   134  00081B  49                 	db	73	;'I'
   135  00081C  4E                 	db	78	;'N'
   136  00081D  47                 	db	71	;'G'
   137  00081E  2E                 	db	46
   138  00081F  2E                 	db	46
   139  000820  2E                 	db	46
   140  000821  00                 	db	0
   141  000822                     STR_1:
   142  000822  50                 	db	80	;'P'
   143  000823  49                 	db	73	;'I'
   144  000824  43                 	db	67	;'C'
   145  000825  31                 	db	49	;'1'
   146  000826  38                 	db	56	;'8'
   147  000827  46                 	db	70	;'F'
   148  000828  32                 	db	50	;'2'
   149  000829  35                 	db	53	;'5'
   150  00082A  35                 	db	53	;'5'
   151  00082B  30                 	db	48	;'0'
   152  00082C  20                 	db	32
   153  00082D  4C                 	db	76	;'L'
   154  00082E  43                 	db	67	;'C'
   155  00082F  44                 	db	68	;'D'
   156  000830  00                 	db	0
   157  000831  00                 	db	0	; dummy byte at the end
   158  0000                     
   159                           ; #config settings
   160                           
   161                           	psect	cinit
   162  000A58                     __pcinit:
   163                           	callstack 0
   164  000A58                     start_initialization:
   165                           	callstack 0
   166  000A58                     __initialization:
   167                           	callstack 0
   168                           
   169                           ; Initialize objects allocated to COMRAM (31 bytes)
   170                           ; load TBLPTR registers with __pidataCOMRAM
   171  000A58  0EB8               	movlw	low __pidataCOMRAM
   172  000A5A  6EF6               	movwf	tblptrl,c
   173  000A5C  0E0A               	movlw	high __pidataCOMRAM
   174  000A5E  6EF7               	movwf	tblptrh,c
   175  000A60  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   176  000A62  6EF8               	movwf	tblptru,c
   177  000A64  EE00  F02E         	lfsr	0,__pdataCOMRAM
   178  000A68  EE10 F01F          	lfsr	1,31
   179  000A6C                     copy_data0:
   180  000A6C  0009               	tblrd		*+
   181  000A6E  CFF5 FFEE          	movff	tablat,postinc0
   182  000A72  50E5               	movf	postdec1,w,c
   183  000A74  50E1               	movf	fsr1l,w,c
   184  000A76  E1FA               	bnz	copy_data0
   185                           
   186                           ; Clear objects allocated to COMRAM (1 bytes)
   187  000A78  6A4D               	clrf	__pbssCOMRAM& (0+255),c
   188  000A7A                     end_of_initialization:
   189                           	callstack 0
   190  000A7A                     __end_of__initialization:
   191                           	callstack 0
   192  000A7A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   193  000A7C  6EF8               	movwf	tblptru,c
   194  000A7E  0E08               	movlw	high __Lsmallconst
   195  000A80  6EF7               	movwf	tblptrh,c
   196  000A82  0100               	movlb	0
   197  000A84  EF44  F005         	goto	_main	;jump to C main() function
   198                           
   199                           	psect	bssCOMRAM
   200  00004D                     __pbssCOMRAM:
   201                           	callstack 0
   202  00004D                     _CURSOR_DISPLAY_SHIFT:
   203                           	callstack 0
   204  00004D                     	ds	1
   205                           
   206                           	psect	dataCOMRAM
   207  00002E                     __pdataCOMRAM:
   208                           	callstack 0
   209  00002E                     lcd_setCursor@F2824:
   210                           	callstack 0
   211  00002E                     	ds	15
   212  00003D                     lcd_setCursor@F2822:
   213                           	callstack 0
   214  00003D                     	ds	15
   215  00004C                     _DISPLAY_CONTROL:
   216                           	callstack 0
   217  00004C                     	ds	1
   218                           
   219                           	psect	cstackCOMRAM
   220  000001                     __pcstackCOMRAM:
   221                           	callstack 0
   222  000001                     ??_lcd_cmd:
   223  000001                     
   224                           ; 1 bytes @ 0x0
   225  000001                     	ds	2
   226  000003                     lcd_cmd@cmd:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x2
   230  000003                     	ds	1
   231  000004                     ??_lcd_clear:
   232  000004                     lcd_setCursor@row:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x3
   236  000004                     	ds	1
   237  000005                     ??_lcd_setCursor:
   238                           
   239                           ; 1 bytes @ 0x4
   240  000005                     	ds	4
   241  000009                     lcd_setCursor@address1:
   242                           	callstack 0
   243                           
   244                           ; 15 bytes @ 0x8
   245  000009                     	ds	15
   246  000018                     lcd_setCursor@address2:
   247                           	callstack 0
   248                           
   249                           ; 15 bytes @ 0x17
   250  000018                     	ds	15
   251  000027                     lcd_setCursor@col:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0x26
   255  000027                     	ds	1
   256  000028                     lcd_print_Text@row:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x27
   260  000028                     	ds	1
   261  000029                     lcd_print_Text@dados:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x28
   265  000029                     	ds	2
   266  00002B                     lcd_print_Text@col:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x2A
   270  00002B                     	ds	1
   271  00002C                     ??_lcd_start:
   272                           
   273                           ; 1 bytes @ 0x2B
   274  00002C                     	ds	2
   275  00002E                     
   276                           ; 1 bytes @ 0x2D
   277 ;;
   278 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   279 ;;
   280 ;; *************** function _main *****************
   281 ;; Defined at:
   282 ;;		line 50 in file "main.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;		None
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   291 ;; Tracked objects:
   292 ;;		On entry : 0/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   296 ;;      Params:         0       0       0       0       0       0       0       0       0
   297 ;;      Locals:         0       0       0       0       0       0       0       0       0
   298 ;;      Temps:          0       0       0       0       0       0       0       0       0
   299 ;;      Totals:         0       0       0       0       0       0       0       0       0
   300 ;;Total ram usage:        0 bytes
   301 ;; Hardware stack levels required when called:    4
   302 ;; This function calls:
   303 ;;		_lcd_print_Text
   304 ;;		_lcd_start
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	text0
   311  000A88                     __ptext0:
   312                           	callstack 0
   313  000A88                     _main:
   314                           	callstack 27
   315  000A88                     
   316                           ;main.c: 52:     lcd_start();
   317  000A88  ECD2  F004         	call	_lcd_start	;wreg free
   318                           
   319                           ;main.c: 54:     lcd_print_Text(2,1,"PIC18F2550 LCD");
   320  000A8C  0E01               	movlw	1
   321  000A8E  6E28               	movwf	lcd_print_Text@row^0,c
   322  000A90  0E22               	movlw	low STR_1
   323  000A92  6E29               	movwf	lcd_print_Text@dados^0,c
   324  000A94  0E08               	movlw	high STR_1
   325  000A96  6E2A               	movwf	(lcd_print_Text@dados+1)^0,c
   326  000A98  0E02               	movlw	2
   327  000A9A  EC0A  F005         	call	_lcd_print_Text
   328                           
   329                           ;main.c: 55:     lcd_print_Text(1,2,"Comununi. 8 Bits");
   330  000A9E  0E02               	movlw	2
   331  000AA0  6E28               	movwf	lcd_print_Text@row^0,c
   332  000AA2  0E01               	movlw	low STR_2
   333  000AA4  6E29               	movwf	lcd_print_Text@dados^0,c
   334  000AA6  0E08               	movlw	high STR_2
   335  000AA8  6E2A               	movwf	(lcd_print_Text@dados+1)^0,c
   336  000AAA  0E01               	movlw	1
   337  000AAC  EC0A  F005         	call	_lcd_print_Text
   338  000AB0                     l13:
   339  000AB0  EF58  F005         	goto	l13
   340  000AB4  EF00  F000         	goto	start
   341  000AB8                     __end_of_main:
   342                           	callstack 0
   343                           
   344 ;; *************** function _lcd_start *****************
   345 ;; Defined at:
   346 ;;		line 43 in file "LiquidCrystal.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   360 ;;      Params:         0       0       0       0       0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0       0       0       0       0
   362 ;;      Temps:          2       0       0       0       0       0       0       0       0
   363 ;;      Totals:         2       0       0       0       0       0       0       0       0
   364 ;;Total ram usage:        2 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; Hardware stack levels required when called:    3
   367 ;; This function calls:
   368 ;;		_lcd_clear
   369 ;;		_lcd_cmd
   370 ;;		_lcd_print_Text
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text1
   377  0009A4                     __ptext1:
   378                           	callstack 0
   379  0009A4                     _lcd_start:
   380                           	callstack 27
   381  0009A4                     
   382                           ;LiquidCrystal.c: 45:     _delay((unsigned long)((15)*(24000000/4000.0)));
   383  0009A4  0E75               	movlw	117
   384  0009A6  6E2C               	movwf	??_lcd_start^0,c
   385  0009A8  0EE1               	movlw	225
   386  0009AA                     u157:
   387  0009AA  2EE8               	decfsz	wreg,f,c
   388  0009AC  D7FE               	bra	u157
   389  0009AE  2E2C               	decfsz	??_lcd_start^0,f,c
   390  0009B0  D7FC               	bra	u157
   391  0009B2  F000               	nop	
   392  0009B4                     
   393                           ;LiquidCrystal.c: 48:     TRISBbits.RB7 = 0b0;
   394  0009B4  9E93               	bcf	147,7,c	;volatile
   395  0009B6                     
   396                           ;LiquidCrystal.c: 49:     TRISBbits.RB6 = 0b0;
   397  0009B6  9C93               	bcf	147,6,c	;volatile
   398  0009B8                     
   399                           ;LiquidCrystal.c: 50:     TRISBbits.RB5 = 0b0;
   400  0009B8  9A93               	bcf	147,5,c	;volatile
   401  0009BA                     
   402                           ;LiquidCrystal.c: 51:     TRISBbits.RB4 = 0b0;
   403  0009BA  9893               	bcf	147,4,c	;volatile
   404  0009BC                     
   405                           ;LiquidCrystal.c: 52:     TRISBbits.RB3 = 0b0;
   406  0009BC  9693               	bcf	147,3,c	;volatile
   407  0009BE                     
   408                           ;LiquidCrystal.c: 53:     TRISBbits.RB2 = 0b0;
   409  0009BE  9493               	bcf	147,2,c	;volatile
   410  0009C0                     
   411                           ;LiquidCrystal.c: 54:     TRISBbits.RB1 = 0b0;
   412  0009C0  9293               	bcf	147,1,c	;volatile
   413  0009C2                     
   414                           ;LiquidCrystal.c: 55:     TRISBbits.RB0 = 0b0;
   415  0009C2  9093               	bcf	147,0,c	;volatile
   416  0009C4                     
   417                           ;LiquidCrystal.c: 57:     TRISCbits.RC0 = 0b0;
   418  0009C4  9094               	bcf	148,0,c	;volatile
   419  0009C6                     
   420                           ;LiquidCrystal.c: 58:     TRISCbits.RC1 = 0b0;
   421  0009C6  9294               	bcf	148,1,c	;volatile
   422  0009C8                     
   423                           ;LiquidCrystal.c: 64:     lcd_cmd(0x38);
   424  0009C8  0E38               	movlw	56
   425  0009CA  EC19  F004         	call	_lcd_cmd
   426  0009CE                     
   427                           ;LiquidCrystal.c: 65:     _delay((unsigned long)((60)*(24000000/4000000.0)));
   428  0009CE  0E78               	movlw	120
   429  0009D0                     u167:
   430  0009D0  2EE8               	decfsz	wreg,f,c
   431  0009D2  D7FE               	bra	u167
   432  0009D4  0E0E               	movlw	14
   433  0009D6  EC19  F004         	call	_lcd_cmd
   434  0009DA                     
   435                           ;LiquidCrystal.c: 73:     _delay((unsigned long)((60)*(24000000/4000000.0)));
   436  0009DA  0E78               	movlw	120
   437  0009DC                     u177:
   438  0009DC  2EE8               	decfsz	wreg,f,c
   439  0009DE  D7FE               	bra	u177
   440  0009E0                     
   441                           ;LiquidCrystal.c: 76:     lcd_clear();
   442  0009E0  EC6C  F005         	call	_lcd_clear	;wreg free
   443  0009E4                     
   444                           ;LiquidCrystal.c: 79:     lcd_print_Text(1, 1, "LCD STARTING...");
   445  0009E4  0E01               	movlw	1
   446  0009E6  6E28               	movwf	lcd_print_Text@row^0,c
   447  0009E8  0E12               	movlw	low STR_3
   448  0009EA  6E29               	movwf	lcd_print_Text@dados^0,c
   449  0009EC  0E08               	movlw	high STR_3
   450  0009EE  6E2A               	movwf	(lcd_print_Text@dados+1)^0,c
   451  0009F0  0E01               	movlw	1
   452  0009F2  EC0A  F005         	call	_lcd_print_Text
   453  0009F6                     
   454                           ;LiquidCrystal.c: 80:     _delay((unsigned long)((3000)*(24000000/4000.0)));
   455  0009F6  0E5C               	movlw	92
   456  0009F8  6E2D               	movwf	(??_lcd_start+1)^0,c
   457  0009FA  0E51               	movlw	81
   458  0009FC  6E2C               	movwf	??_lcd_start^0,c
   459  0009FE  0E60               	movlw	96
   460  000A00                     u187:
   461  000A00  2EE8               	decfsz	wreg,f,c
   462  000A02  D7FE               	bra	u187
   463  000A04  2E2C               	decfsz	??_lcd_start^0,f,c
   464  000A06  D7FC               	bra	u187
   465  000A08  2E2D               	decfsz	(??_lcd_start+1)^0,f,c
   466  000A0A  D7FA               	bra	u187
   467  000A0C  D000               	nop2	
   468  000A0E                     
   469                           ;LiquidCrystal.c: 83:     lcd_clear();
   470  000A0E  EC6C  F005         	call	_lcd_clear	;wreg free
   471  000A12  0012               	return		;funcret
   472  000A14                     __end_of_lcd_start:
   473                           	callstack 0
   474                           
   475 ;; *************** function _lcd_print_Text *****************
   476 ;; Defined at:
   477 ;;		line 128 in file "LiquidCrystal.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;  col             1    wreg     unsigned char 
   480 ;;  row             1   39[COMRAM] unsigned char 
   481 ;;  dados           2   40[COMRAM] PTR unsigned char 
   482 ;;		 -> STR_3(16), STR_2(17), STR_1(15), 
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  col             1   42[COMRAM] unsigned char 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   494 ;;      Params:         3       0       0       0       0       0       0       0       0
   495 ;;      Locals:         1       0       0       0       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0       0       0
   497 ;;      Totals:         4       0       0       0       0       0       0       0       0
   498 ;;Total ram usage:        4 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; Hardware stack levels required when called:    2
   501 ;; This function calls:
   502 ;;		_lcd_cmd
   503 ;;		_lcd_setCursor
   504 ;; This function is called by:
   505 ;;		_main
   506 ;;		_lcd_start
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           	psect	text2
   511  000A14                     __ptext2:
   512                           	callstack 0
   513  000A14                     _lcd_print_Text:
   514                           	callstack 27
   515                           
   516                           ;incstack = 0
   517                           ;lcd_print_Text@col stored from wreg
   518  000A14  6E2B               	movwf	lcd_print_Text@col^0,c
   519  000A16                     
   520                           ;LiquidCrystal.c: 130:     lcd_setCursor(col, row);
   521  000A16  C028  F004         	movff	lcd_print_Text@row,lcd_setCursor@row
   522  000A1A  502B               	movf	lcd_print_Text@col^0,w,c
   523  000A1C  EC84  F004         	call	_lcd_setCursor
   524  000A20                     
   525                           ;LiquidCrystal.c: 132:     PORTCbits.RC0 = 0x01;
   526  000A20  8082               	bsf	130,0,c	;volatile
   527                           
   528                           ;LiquidCrystal.c: 134:     while (*dados != 0) {
   529  000A22  EF1D  F005         	goto	l845
   530  000A26                     l841:
   531                           
   532                           ;LiquidCrystal.c: 135:         lcd_cmd(*dados);
   533  000A26  C029  FFF6         	movff	lcd_print_Text@dados,tblptrl
   534  000A2A  C02A  FFF7         	movff	lcd_print_Text@dados+1,tblptrh
   535  000A2E                     	if	0	;tblptru may be non-zero
   536  000A2E                     	endif
   537  000A2E                     	if	0	;tblptru may be non-zero
   538  000A2E                     	endif
   539  000A2E  0008               	tblrd		*
   540  000A30  50F5               	movf	tablat,w,c
   541  000A32  EC19  F004         	call	_lcd_cmd
   542  000A36                     
   543                           ;LiquidCrystal.c: 136:         dados++;
   544  000A36  4A29               	infsnz	lcd_print_Text@dados^0,f,c
   545  000A38  2A2A               	incf	(lcd_print_Text@dados+1)^0,f,c
   546  000A3A                     l845:
   547                           
   548                           ;LiquidCrystal.c: 134:     while (*dados != 0) {
   549  000A3A  C029  FFF6         	movff	lcd_print_Text@dados,tblptrl
   550  000A3E  C02A  FFF7         	movff	lcd_print_Text@dados+1,tblptrh
   551  000A42                     	if	0	;tblptru may be non-zero
   552  000A42                     	endif
   553  000A42                     	if	0	;tblptru may be non-zero
   554  000A42                     	endif
   555  000A42  0008               	tblrd		*
   556  000A44  50F5               	movf	tablat,w,c
   557  000A46  0900               	iorlw	0
   558  000A48  A4D8               	btfss	status,2,c
   559  000A4A  EF29  F005         	goto	u141
   560  000A4E  EF2B  F005         	goto	u140
   561  000A52                     u141:
   562  000A52  EF13  F005         	goto	l841
   563  000A56                     u140:
   564  000A56  0012               	return		;funcret
   565  000A58                     __end_of_lcd_print_Text:
   566                           	callstack 0
   567                           
   568 ;; *************** function _lcd_setCursor *****************
   569 ;; Defined at:
   570 ;;		line 146 in file "LiquidCrystal.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  col             1    wreg     unsigned char 
   573 ;;  row             1    3[COMRAM] unsigned char 
   574 ;; Auto vars:     Size  Location     Type
   575 ;;  col             1   38[COMRAM] unsigned char 
   576 ;;  address2       15   23[COMRAM] unsigned char [15]
   577 ;;  address1       15    8[COMRAM] unsigned char [15]
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   587 ;;      Params:         1       0       0       0       0       0       0       0       0
   588 ;;      Locals:        31       0       0       0       0       0       0       0       0
   589 ;;      Temps:          4       0       0       0       0       0       0       0       0
   590 ;;      Totals:        36       0       0       0       0       0       0       0       0
   591 ;;Total ram usage:       36 bytes
   592 ;; Hardware stack levels used:    1
   593 ;; Hardware stack levels required when called:    1
   594 ;; This function calls:
   595 ;;		_lcd_cmd
   596 ;; This function is called by:
   597 ;;		_lcd_print_Text
   598 ;;		_lcd_print_Byte
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text3
   603  000908                     __ptext3:
   604                           	callstack 0
   605  000908                     _lcd_setCursor:
   606                           	callstack 27
   607                           
   608                           ;incstack = 0
   609                           ;lcd_setCursor@col stored from wreg
   610  000908  6E27               	movwf	lcd_setCursor@col^0,c
   611  00090A                     
   612                           ;LiquidCrystal.c: 148:     PORTCbits.RC0 = 0x00;
   613  00090A  9082               	bcf	130,0,c	;volatile
   614  00090C                     
   615                           ;LiquidCrystal.c: 150:     char address1[] = {0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 
      +                          0x87, 0x88,
   616  00090C  EE20  F03D         	lfsr	2,lcd_setCursor@F2822
   617  000910  EE10  F009         	lfsr	1,lcd_setCursor@address1
   618  000914  0E0E               	movlw	14
   619  000916                     u101:
   620  000916  CFDB FFE3          	movff	plusw2,plusw1
   621  00091A  06E8               	decf	wreg,f,c
   622  00091C  E2FC               	bc	u101
   623                           
   624                           ;LiquidCrystal.c: 153:     char address2[] = {0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 
      +                          0xC7, 0xC8,
   625  00091E  EE20  F02E         	lfsr	2,lcd_setCursor@F2824
   626  000922  EE10  F018         	lfsr	1,lcd_setCursor@address2
   627  000926  0E0E               	movlw	14
   628  000928                     u111:
   629  000928  CFDB FFE3          	movff	plusw2,plusw1
   630  00092C  06E8               	decf	wreg,f,c
   631  00092E  E2FC               	bc	u111
   632  000930                     
   633                           ;LiquidCrystal.c: 156:     if (row == 1) {
   634  000930  0404               	decf	lcd_setCursor@row^0,w,c
   635  000932  A4D8               	btfss	status,2,c
   636  000934  EF9E  F004         	goto	u121
   637  000938  EFA0  F004         	goto	u120
   638  00093C                     u121:
   639  00093C  EFB4  F004         	goto	l833
   640  000940                     u120:
   641  000940                     
   642                           ;LiquidCrystal.c: 157:         lcd_cmd(address1[col - 1]);
   643  000940  0EFF               	movlw	255
   644  000942  6E05               	movwf	??_lcd_setCursor^0,c
   645  000944  0EFF               	movlw	255
   646  000946  6E06               	movwf	(??_lcd_setCursor+1)^0,c
   647  000948  5027               	movf	lcd_setCursor@col^0,w,c
   648  00094A  6E07               	movwf	(??_lcd_setCursor+2)^0,c
   649  00094C  6A08               	clrf	(??_lcd_setCursor+3)^0,c
   650  00094E  5005               	movf	??_lcd_setCursor^0,w,c
   651  000950  2607               	addwf	(??_lcd_setCursor+2)^0,f,c
   652  000952  5006               	movf	(??_lcd_setCursor+1)^0,w,c
   653  000954  2208               	addwfc	(??_lcd_setCursor+3)^0,f,c
   654  000956  0E09               	movlw	low lcd_setCursor@address1
   655  000958  2407               	addwf	(??_lcd_setCursor+2)^0,w,c
   656  00095A  6ED9               	movwf	fsr2l,c
   657  00095C  0E00               	movlw	high lcd_setCursor@address1
   658  00095E  2008               	addwfc	(??_lcd_setCursor+3)^0,w,c
   659  000960  6EDA               	movwf	fsr2h,c
   660  000962  50DF               	movf	indf2,w,c
   661  000964  EC19  F004         	call	_lcd_cmd
   662  000968                     l833:
   663                           
   664                           ;LiquidCrystal.c: 160:     if (row == 2) {
   665  000968  0E02               	movlw	2
   666  00096A  1804               	xorwf	lcd_setCursor@row^0,w,c
   667  00096C  A4D8               	btfss	status,2,c
   668  00096E  EFBB  F004         	goto	u131
   669  000972  EFBD  F004         	goto	u130
   670  000976                     u131:
   671  000976  EFD1  F004         	goto	l62
   672  00097A                     u130:
   673  00097A                     
   674                           ;LiquidCrystal.c: 161:         lcd_cmd(address2[col - 1]);
   675  00097A  0EFF               	movlw	255
   676  00097C  6E05               	movwf	??_lcd_setCursor^0,c
   677  00097E  0EFF               	movlw	255
   678  000980  6E06               	movwf	(??_lcd_setCursor+1)^0,c
   679  000982  5027               	movf	lcd_setCursor@col^0,w,c
   680  000984  6E07               	movwf	(??_lcd_setCursor+2)^0,c
   681  000986  6A08               	clrf	(??_lcd_setCursor+3)^0,c
   682  000988  5005               	movf	??_lcd_setCursor^0,w,c
   683  00098A  2607               	addwf	(??_lcd_setCursor+2)^0,f,c
   684  00098C  5006               	movf	(??_lcd_setCursor+1)^0,w,c
   685  00098E  2208               	addwfc	(??_lcd_setCursor+3)^0,f,c
   686  000990  0E18               	movlw	low lcd_setCursor@address2
   687  000992  2407               	addwf	(??_lcd_setCursor+2)^0,w,c
   688  000994  6ED9               	movwf	fsr2l,c
   689  000996  0E00               	movlw	high lcd_setCursor@address2
   690  000998  2008               	addwfc	(??_lcd_setCursor+3)^0,w,c
   691  00099A  6EDA               	movwf	fsr2h,c
   692  00099C  50DF               	movf	indf2,w,c
   693  00099E  EC19  F004         	call	_lcd_cmd
   694  0009A2                     l62:
   695  0009A2  0012               	return		;funcret
   696  0009A4                     __end_of_lcd_setCursor:
   697                           	callstack 0
   698                           
   699 ;; *************** function _lcd_clear *****************
   700 ;; Defined at:
   701 ;;		line 167 in file "LiquidCrystal.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   715 ;;      Params:         0       0       0       0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0       0       0
   717 ;;      Temps:          1       0       0       0       0       0       0       0       0
   718 ;;      Totals:         1       0       0       0       0       0       0       0       0
   719 ;;Total ram usage:        1 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    1
   722 ;; This function calls:
   723 ;;		_lcd_cmd
   724 ;; This function is called by:
   725 ;;		_lcd_start
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text4
   730  000AD8                     __ptext4:
   731                           	callstack 0
   732  000AD8                     _lcd_clear:
   733                           	callstack 28
   734  000AD8                     
   735                           ;LiquidCrystal.c: 169:     PORTCbits.RC0 = 0x00;
   736  000AD8  9082               	bcf	130,0,c	;volatile
   737  000ADA                     
   738                           ;LiquidCrystal.c: 171:     lcd_cmd(0x01);
   739  000ADA  0E01               	movlw	1
   740  000ADC  EC19  F004         	call	_lcd_cmd
   741  000AE0                     
   742                           ;LiquidCrystal.c: 173:     _delay((unsigned long)((2)*(24000000/4000.0)));
   743  000AE0  0E10               	movlw	16
   744  000AE2  6E04               	movwf	??_lcd_clear^0,c
   745  000AE4  0E94               	movlw	148
   746  000AE6                     u197:
   747  000AE6  2EE8               	decfsz	wreg,f,c
   748  000AE8  D7FE               	bra	u197
   749  000AEA  2E04               	decfsz	??_lcd_clear^0,f,c
   750  000AEC  D7FC               	bra	u197
   751  000AEE  D000               	nop2	
   752  000AF0  0012               	return		;funcret
   753  000AF2                     __end_of_lcd_clear:
   754                           	callstack 0
   755                           
   756 ;; *************** function _lcd_cmd *****************
   757 ;; Defined at:
   758 ;;		line 93 in file "LiquidCrystal.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  cmd             1    wreg     unsigned char 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  cmd             1    2[COMRAM] unsigned char 
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2, status,0
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   772 ;;      Params:         0       0       0       0       0       0       0       0       0
   773 ;;      Locals:         1       0       0       0       0       0       0       0       0
   774 ;;      Temps:          2       0       0       0       0       0       0       0       0
   775 ;;      Totals:         3       0       0       0       0       0       0       0       0
   776 ;;Total ram usage:        3 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_lcd_start
   782 ;;		_lcd_print_Text
   783 ;;		_lcd_setCursor
   784 ;;		_lcd_clear
   785 ;;		_lcd_print_Byte
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text5
   790  000832                     __ptext5:
   791                           	callstack 0
   792  000832                     _lcd_cmd:
   793                           	callstack 27
   794                           
   795                           ;incstack = 0
   796                           ;lcd_cmd@cmd stored from wreg
   797  000832  6E03               	movwf	lcd_cmd@cmd^0,c
   798  000834                     
   799                           ;LiquidCrystal.c: 95:     PORTCbits.RC1 = 0x00;
   800  000834  9282               	bcf	130,1,c	;volatile
   801  000836                     
   802                           ;LiquidCrystal.c: 97:     PORTBbits.RB7 = cmd >> 7;
   803  000836  6A01               	clrf	??_lcd_cmd^0,c
   804  000838  AE03               	btfss	lcd_cmd@cmd^0,7,c
   805  00083A  D001               	bra	u15
   806  00083C  2A01               	incf	??_lcd_cmd^0,f,c
   807  00083E                     u15:
   808  00083E  3201               	rrcf	??_lcd_cmd^0,f,c
   809  000840  3201               	rrcf	??_lcd_cmd^0,f,c
   810  000842  5081               	movf	129,w,c	;volatile
   811  000844  1801               	xorwf	??_lcd_cmd^0,w,c
   812  000846  0B7F               	andlw	-129
   813  000848  1801               	xorwf	??_lcd_cmd^0,w,c
   814  00084A  6E81               	movwf	129,c	;volatile
   815                           
   816                           ;LiquidCrystal.c: 98:     PORTBbits.RB6 = cmd >> 6;
   817  00084C  C003  F001         	movff	lcd_cmd@cmd,??_lcd_cmd
   818  000850  0E06               	movlw	6
   819  000852  6E02               	movwf	(??_lcd_cmd+1)^0,c
   820  000854                     u25:
   821  000854  90D8               	bcf	status,0,c
   822  000856  3201               	rrcf	??_lcd_cmd^0,f,c
   823  000858  2E02               	decfsz	(??_lcd_cmd+1)^0,f,c
   824  00085A  EF2A  F004         	goto	u25
   825  00085E  3A01               	swapf	??_lcd_cmd^0,f,c
   826  000860  4601               	rlncf	??_lcd_cmd^0,f,c
   827  000862  4601               	rlncf	??_lcd_cmd^0,f,c
   828  000864  5081               	movf	129,w,c	;volatile
   829  000866  1801               	xorwf	??_lcd_cmd^0,w,c
   830  000868  0BBF               	andlw	-65
   831  00086A  1801               	xorwf	??_lcd_cmd^0,w,c
   832  00086C  6E81               	movwf	129,c	;volatile
   833                           
   834                           ;LiquidCrystal.c: 99:     PORTBbits.RB5 = cmd >> 5;
   835  00086E  C003  F001         	movff	lcd_cmd@cmd,??_lcd_cmd
   836  000872  0E05               	movlw	5
   837  000874  6E02               	movwf	(??_lcd_cmd+1)^0,c
   838  000876                     u35:
   839  000876  90D8               	bcf	status,0,c
   840  000878  3201               	rrcf	??_lcd_cmd^0,f,c
   841  00087A  2E02               	decfsz	(??_lcd_cmd+1)^0,f,c
   842  00087C  EF3B  F004         	goto	u35
   843  000880  3A01               	swapf	??_lcd_cmd^0,f,c
   844  000882  4601               	rlncf	??_lcd_cmd^0,f,c
   845  000884  5081               	movf	129,w,c	;volatile
   846  000886  1801               	xorwf	??_lcd_cmd^0,w,c
   847  000888  0BDF               	andlw	-33
   848  00088A  1801               	xorwf	??_lcd_cmd^0,w,c
   849  00088C  6E81               	movwf	129,c	;volatile
   850                           
   851                           ;LiquidCrystal.c: 100:     PORTBbits.RB4 = cmd >> 4;
   852  00088E  C003  F001         	movff	lcd_cmd@cmd,??_lcd_cmd
   853  000892  3A01               	swapf	??_lcd_cmd^0,f,c
   854  000894  0E0F               	movlw	15
   855  000896  1601               	andwf	??_lcd_cmd^0,f,c
   856  000898  3A01               	swapf	??_lcd_cmd^0,f,c
   857  00089A  5081               	movf	129,w,c	;volatile
   858  00089C  1801               	xorwf	??_lcd_cmd^0,w,c
   859  00089E  0BEF               	andlw	-17
   860  0008A0  1801               	xorwf	??_lcd_cmd^0,w,c
   861  0008A2  6E81               	movwf	129,c	;volatile
   862                           
   863                           ;LiquidCrystal.c: 101:     PORTBbits.RB3 = cmd >> 3;
   864  0008A4  C003  F001         	movff	lcd_cmd@cmd,??_lcd_cmd
   865  0008A8  90D8               	bcf	status,0,c
   866  0008AA  3201               	rrcf	??_lcd_cmd^0,f,c
   867  0008AC  90D8               	bcf	status,0,c
   868  0008AE  3201               	rrcf	??_lcd_cmd^0,f,c
   869  0008B0  90D8               	bcf	status,0,c
   870  0008B2  3201               	rrcf	??_lcd_cmd^0,f,c
   871  0008B4  4601               	rlncf	??_lcd_cmd^0,f,c
   872  0008B6  4601               	rlncf	??_lcd_cmd^0,f,c
   873  0008B8  4601               	rlncf	??_lcd_cmd^0,f,c
   874  0008BA  5081               	movf	129,w,c	;volatile
   875  0008BC  1801               	xorwf	??_lcd_cmd^0,w,c
   876  0008BE  0BF7               	andlw	-9
   877  0008C0  1801               	xorwf	??_lcd_cmd^0,w,c
   878  0008C2  6E81               	movwf	129,c	;volatile
   879                           
   880                           ;LiquidCrystal.c: 102:     PORTBbits.RB2 = cmd >> 2;
   881  0008C4  C003  F001         	movff	lcd_cmd@cmd,??_lcd_cmd
   882  0008C8  90D8               	bcf	status,0,c
   883  0008CA  3201               	rrcf	??_lcd_cmd^0,f,c
   884  0008CC  90D8               	bcf	status,0,c
   885  0008CE  3201               	rrcf	??_lcd_cmd^0,f,c
   886  0008D0  4601               	rlncf	??_lcd_cmd^0,f,c
   887  0008D2  4601               	rlncf	??_lcd_cmd^0,f,c
   888  0008D4  5081               	movf	129,w,c	;volatile
   889  0008D6  1801               	xorwf	??_lcd_cmd^0,w,c
   890  0008D8  0BFB               	andlw	-5
   891  0008DA  1801               	xorwf	??_lcd_cmd^0,w,c
   892  0008DC  6E81               	movwf	129,c	;volatile
   893                           
   894                           ;LiquidCrystal.c: 103:     PORTBbits.RB1 = cmd >> 1;
   895  0008DE  C003  F001         	movff	lcd_cmd@cmd,??_lcd_cmd
   896  0008E2  90D8               	bcf	status,0,c
   897  0008E4  3201               	rrcf	??_lcd_cmd^0,f,c
   898  0008E6  4601               	rlncf	??_lcd_cmd^0,f,c
   899  0008E8  5081               	movf	129,w,c	;volatile
   900  0008EA  1801               	xorwf	??_lcd_cmd^0,w,c
   901  0008EC  0BFD               	andlw	-3
   902  0008EE  1801               	xorwf	??_lcd_cmd^0,w,c
   903  0008F0  6E81               	movwf	129,c	;volatile
   904  0008F2                     
   905                           ;LiquidCrystal.c: 104:     PORTBbits.RB0 = cmd >> 0;
   906  0008F2  B003               	btfsc	lcd_cmd@cmd^0,0,c
   907  0008F4  D002               	bra	u45
   908  0008F6  9081               	bcf	129,0,c	;volatile
   909  0008F8  D001               	bra	u46
   910  0008FA                     u45:
   911  0008FA  8081               	bsf	129,0,c	;volatile
   912  0008FC                     u46:
   913  0008FC                     
   914                           ;LiquidCrystal.c: 106:     PORTCbits.RC1 = 0x01;
   915  0008FC  8282               	bsf	130,1,c	;volatile
   916  0008FE                     
   917                           ;LiquidCrystal.c: 107:     _delay((unsigned long)((40)*(24000000/4000000.0)));
   918  0008FE  0E50               	movlw	80
   919  000900                     u207:
   920  000900  2EE8               	decfsz	wreg,f,c
   921  000902  D7FE               	bra	u207
   922  000904                     
   923                           ;LiquidCrystal.c: 108:     PORTCbits.RC1 = 0x00;
   924  000904  9282               	bcf	130,1,c	;volatile
   925  000906  0012               	return		;funcret
   926  000908                     __end_of_lcd_cmd:
   927                           	callstack 0
   928                           
   929                           	psect	rparam
   930  0000                     
   931                           	psect	idloc
   932                           
   933                           ;Config register IDLOC0 @ 0x200000
   934                           ;	unspecified, using default values
   935  200000                     	org	2097152
   936  200000  FF                 	db	255
   937                           
   938                           ;Config register IDLOC1 @ 0x200001
   939                           ;	unspecified, using default values
   940  200001                     	org	2097153
   941  200001  FF                 	db	255
   942                           
   943                           ;Config register IDLOC2 @ 0x200002
   944                           ;	unspecified, using default values
   945  200002                     	org	2097154
   946  200002  FF                 	db	255
   947                           
   948                           ;Config register IDLOC3 @ 0x200003
   949                           ;	unspecified, using default values
   950  200003                     	org	2097155
   951  200003  FF                 	db	255
   952                           
   953                           ;Config register IDLOC4 @ 0x200004
   954                           ;	unspecified, using default values
   955  200004                     	org	2097156
   956  200004  FF                 	db	255
   957                           
   958                           ;Config register IDLOC5 @ 0x200005
   959                           ;	unspecified, using default values
   960  200005                     	org	2097157
   961  200005  FF                 	db	255
   962                           
   963                           ;Config register IDLOC6 @ 0x200006
   964                           ;	unspecified, using default values
   965  200006                     	org	2097158
   966  200006  FF                 	db	255
   967                           
   968                           ;Config register IDLOC7 @ 0x200007
   969                           ;	unspecified, using default values
   970  200007                     	org	2097159
   971  200007  FF                 	db	255
   972                           
   973                           	psect	config
   974                           
   975                           ;Config register CONFIG1L @ 0x300000
   976                           ;	PLL Prescaler Selection bits
   977                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
   978                           ;	System Clock Postscaler Selection bits
   979                           ;	CPUDIV = OSC3_PLL4, [Primary Oscillator Src: /3][96 MHz PLL Src: /4]
   980                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   981                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
   982  300000                     	org	3145728
   983  300000  34                 	db	52
   984                           
   985                           ;Config register CONFIG1H @ 0x300001
   986                           ;	Oscillator Selection bits
   987                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   988                           ;	Fail-Safe Clock Monitor Enable bit
   989                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   990                           ;	Internal/External Oscillator Switchover bit
   991                           ;	IESO = OFF, Oscillator Switchover mode disabled
   992  300001                     	org	3145729
   993  300001  4E                 	db	78
   994                           
   995                           ;Config register CONFIG2L @ 0x300002
   996                           ;	Power-up Timer Enable bit
   997                           ;	PWRT = ON, PWRT enabled
   998                           ;	Brown-out Reset Enable bits
   999                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1000                           ;	Brown-out Reset Voltage bits
  1001                           ;	BORV = 1, Setting 2 4.33V
  1002                           ;	USB Voltage Regulator Enable bit
  1003                           ;	VREGEN = OFF, USB voltage regulator disabled
  1004  300002                     	org	3145730
  1005  300002  0E                 	db	14
  1006                           
  1007                           ;Config register CONFIG2H @ 0x300003
  1008                           ;	Watchdog Timer Enable bit
  1009                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1010                           ;	Watchdog Timer Postscale Select bits
  1011                           ;	WDTPS = 0xF, unprogrammed default
  1012  300003                     	org	3145731
  1013  300003  1E                 	db	30
  1014                           
  1015                           ; Padding undefined space
  1016  300004                     	org	3145732
  1017  300004  FF                 	db	255
  1018                           
  1019                           ;Config register CONFIG3H @ 0x300005
  1020                           ;	CCP2 MUX bit
  1021                           ;	CCP2MX = 0x1, unprogrammed default
  1022                           ;	PORTB A/D Enable bit
  1023                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1024                           ;	Low-Power Timer 1 Oscillator Enable bit
  1025                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1026                           ;	MCLR Pin Enable bit
  1027                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1028  300005                     	org	3145733
  1029  300005  81                 	db	129
  1030                           
  1031                           ;Config register CONFIG4L @ 0x300006
  1032                           ;	Stack Full/Underflow Reset Enable bit
  1033                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1034                           ;	Single-Supply ICSP Enable bit
  1035                           ;	LVP = OFF, Single-Supply ICSP disabled
  1036                           ;	Extended Instruction Set Enable bit
  1037                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1038                           ;	Background Debugger Enable bit
  1039                           ;	DEBUG = 0x1, unprogrammed default
  1040  300006                     	org	3145734
  1041  300006  80                 	db	128
  1042                           
  1043                           ; Padding undefined space
  1044  300007                     	org	3145735
  1045  300007  FF                 	db	255
  1046                           
  1047                           ;Config register CONFIG5L @ 0x300008
  1048                           ;	Code Protection bit
  1049                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1050                           ;	Code Protection bit
  1051                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1052                           ;	Code Protection bit
  1053                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1054                           ;	Code Protection bit
  1055                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1056  300008                     	org	3145736
  1057  300008  0F                 	db	15
  1058                           
  1059                           ;Config register CONFIG5H @ 0x300009
  1060                           ;	Boot Block Code Protection bit
  1061                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1062                           ;	Data EEPROM Code Protection bit
  1063                           ;	CPD = OFF, Data EEPROM is not code-protected
  1064  300009                     	org	3145737
  1065  300009  C0                 	db	192
  1066                           
  1067                           ;Config register CONFIG6L @ 0x30000A
  1068                           ;	Write Protection bit
  1069                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1070                           ;	Write Protection bit
  1071                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1072                           ;	Write Protection bit
  1073                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1074                           ;	Write Protection bit
  1075                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1076  30000A                     	org	3145738
  1077  30000A  0F                 	db	15
  1078                           
  1079                           ;Config register CONFIG6H @ 0x30000B
  1080                           ;	Configuration Register Write Protection bit
  1081                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1082                           ;	Boot Block Write Protection bit
  1083                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1084                           ;	Data EEPROM Write Protection bit
  1085                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1086  30000B                     	org	3145739
  1087  30000B  E0                 	db	224
  1088                           
  1089                           ;Config register CONFIG7L @ 0x30000C
  1090                           ;	Table Read Protection bit
  1091                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1092                           ;	Table Read Protection bit
  1093                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1094                           ;	Table Read Protection bit
  1095                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1096                           ;	Table Read Protection bit
  1097                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1098  30000C                     	org	3145740
  1099  30000C  0F                 	db	15
  1100                           
  1101                           ;Config register CONFIG7H @ 0x30000D
  1102                           ;	Boot Block Table Read Protection bit
  1103                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1104  30000D                     	org	3145741
  1105  30000D  40                 	db	64
  1106                           tosu	equ	0xFFF
  1107                           tosh	equ	0xFFE
  1108                           tosl	equ	0xFFD
  1109                           stkptr	equ	0xFFC
  1110                           pclatu	equ	0xFFB
  1111                           pclath	equ	0xFFA
  1112                           pcl	equ	0xFF9
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           prodh	equ	0xFF4
  1118                           prodl	equ	0xFF3
  1119                           indf0	equ	0xFEF
  1120                           postinc0	equ	0xFEE
  1121                           postdec0	equ	0xFED
  1122                           preinc0	equ	0xFEC
  1123                           plusw0	equ	0xFEB
  1124                           fsr0h	equ	0xFEA
  1125                           fsr0l	equ	0xFE9
  1126                           wreg	equ	0xFE8
  1127                           indf1	equ	0xFE7
  1128                           postinc1	equ	0xFE6
  1129                           postdec1	equ	0xFE5
  1130                           preinc1	equ	0xFE4
  1131                           plusw1	equ	0xFE3
  1132                           fsr1h	equ	0xFE2
  1133                           fsr1l	equ	0xFE1
  1134                           bsr	equ	0xFE0
  1135                           indf2	equ	0xFDF
  1136                           postinc2	equ	0xFDE
  1137                           postdec2	equ	0xFDD
  1138                           preinc2	equ	0xFDC
  1139                           plusw2	equ	0xFDB
  1140                           fsr2h	equ	0xFDA
  1141                           fsr2l	equ	0xFD9
  1142                           status	equ	0xFD8

Data Sizes:
    Strings     48
    Constant    0
    Data        31
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      77
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           244      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_print_Text@dados	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[16]), STR_2(CODE[17]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_lcd_start
    _lcd_start->_lcd_print_Text
    _lcd_print_Text->_lcd_setCursor
    _lcd_setCursor->_lcd_cmd
    _lcd_clear->_lcd_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2386
                     _lcd_print_Text
                          _lcd_start
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            2     2      0    1313
                                             43 COMRAM     2     2      0
                          _lcd_clear
                            _lcd_cmd
                     _lcd_print_Text
 ---------------------------------------------------------------------------------
 (2) _lcd_print_Text                                       4     1      3    1073
                                             39 COMRAM     4     1      3
                            _lcd_cmd
                      _lcd_setCursor
 ---------------------------------------------------------------------------------
 (3) _lcd_setCursor                                       36    35      1     408
                                              3 COMRAM    36    35      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     120
                                              3 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (4) _lcd_cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_print_Text
     _lcd_cmd
     _lcd_setCursor
       _lcd_cmd
   _lcd_start
     _lcd_clear
       _lcd_cmd
     _lcd_cmd
     _lcd_print_Text
       _lcd_cmd
       _lcd_setCursor
         _lcd_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3F3      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            F4      0       0      12        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      4D       1       81.1%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      11        0.0%
DATA                 0      0      4D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 20 21:09:22 2020

   _CURSOR_DISPLAY_SHIFT 004D           ?_lcd_setCursor 0004                       l13 0AB0  
                     l14 0AB0                       l41 0A12                       l44 0906  
                     l53 0A56                       l62 09A2                       l65 0AF0  
                     u15 083E                       u25 0854                       u35 0876  
                     u45 08FA                       u46 08FC                      l741 0834  
                    l751 0904                      l743 0836                      l831 0940  
                    l745 08F2                      l833 0968                      l825 090A  
                    l841 0A26                      l747 08FC                      l835 097A  
                    l827 090C                      l843 0A36                      l851 09B6  
                    l749 08FE                      l829 0930                      l845 0A3A  
                    l837 0A16                      l861 09C0                      l853 09B8  
                    l775 0AD8                      l839 0A20                      l871 09CE  
                    l863 09C2                      l855 09BA                      l847 09A4  
                    l777 0ADA                      l881 0A0E                      l873 09DA  
                    l865 09C4                      l857 09BC                      l849 09B4  
                    l779 0AE0                      l875 09E0                      l867 09C6  
                    l859 09BE                      l883 0A88                      l877 09E4  
                    l869 09C8                      l879 09F6                      u101 0916  
                    u111 0928                      u120 0940                      u121 093C  
                    u130 097A                      u131 0976                      u140 0A56  
                    u141 0A52                      u207 0900                      u157 09AA  
                    u167 09D0                      u177 09DC                      u187 0A00  
                    u197 0AE6                      wreg 000FE8                     STR_1 0822  
                   STR_2 0801                     STR_3 0812                     _main 0A88  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
        ?_lcd_print_Text 0028                     start 0000             ___param_bank 000000  
                  ?_main 0001    lcd_setCursor@address1 0009    lcd_setCursor@address2 0018  
        __end_of_lcd_cmd 0908                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB       lcd_setCursor@F2822 003D       lcd_setCursor@F2824 002E  
                  status 000FD8          __initialization 0A58          ??_lcd_setCursor 0005  
           __end_of_main 0AB8                   ??_main 002E            __activetblptr 000001  
              ??_lcd_cmd 0001             __pdataCOMRAM 002E             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
      lcd_print_Text@col 002B        lcd_print_Text@row 0028               __accesstop 0060  
__end_of__initialization 0A7A            ___rparam_used 000001           __pcstackCOMRAM 0001  
       lcd_setCursor@col 0027         lcd_setCursor@row 0004       __size_of_lcd_clear 001A  
     __size_of_lcd_start 0070         ??_lcd_print_Text 002B                  __Hparam 0000  
                __Lparam 0000        __end_of_lcd_clear 0AF2        __end_of_lcd_start 0A14  
           __psmallconst 0800                  __pcinit 0A58                  __ramtop 0800  
                __ptext0 0A88                  __ptext1 09A4                  __ptext2 0A14  
                __ptext3 0908                  __ptext4 0AD8                  __ptext5 0832  
                _lcd_cmd 0832     end_of_initialization 0A7A                  postdec1 000FE5  
                postinc0 000FEE    __end_of_lcd_setCursor 09A4                _PORTBbits 000F81  
              _PORTCbits 000F82                _TRISBbits 000F93                _TRISCbits 000F94  
             lcd_cmd@cmd 0003            __pidataCOMRAM 0AB8      start_initialization 0A58  
            __pbssCOMRAM 004D          _DISPLAY_CONTROL 004C                _lcd_clear 0AD8  
              _lcd_start 09A4                 ?_lcd_cmd 0001              __smallconst 0800  
__size_of_lcd_print_Text 0044               ?_lcd_clear 0001               ?_lcd_start 0001  
              copy_data0 0A6C                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0800         __size_of_lcd_cmd 00D6   __size_of_lcd_setCursor 009C  
          __size_of_main 0030              ??_lcd_clear 0004              ??_lcd_start 002C  
         _lcd_print_Text 0A14            _lcd_setCursor 0908      lcd_print_Text@dados 0029  
 __end_of_lcd_print_Text 0A58  
